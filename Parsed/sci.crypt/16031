From Raymond Brand Subject Re Clipper considered harmful In article Steven Bellovin writes There are three issues with The first is whether or not the architecture of the whole scheme is capable of My answer with one significant exception is I really do think that NSA and NIST have designed this scheme about as well as can be assuming that their real objectives are as stated to permit wiretapping under certain carefully controlled circumstances with a minimum risk of The exception is that U exists outside of the chip on a programming That's seriously U and U should be loaded onto the chip To those who disagree and I don't claim my answer is obvious though I found my own reasoning sufficiently persuasive that I was forced to rewrite the Conclusions section of my technical analysis paper I had originally blasted the scheme I issue this invitation assume that you were charged with implementing such a system with complete regard for civil rights and due What would you do differently In answering this question please accept NSA's fundamental assumptions that both strong cryptography against outsiders and the ability to wiretap some domestic users is If you feel it necessary to challenge those assumptions do it in the context of the last issue I present Right here I'm discussing just the technical And no I don't by any means claim that just because something can be done it should OK Steve here's a sketch of an alternative that I believe addresses most of the objections to the Clipper Notation concatenation exclusive or E M K message M encrypted by key K D M K message M decrypted by key K H M hash digest signature of message M Important Values X local chip unit key from escrow agency X X remote chip unit key from escrow agency X N serial number of the local chip N serial number of the remote chip A number of escrow agencies K K session keys agreed upon external to this protocol F family key need not be secret Protocol Choose A such that K A Remote chip does same for K A Compute the following E A E A A L N E N A F Remote chip does the same for A L Send L to remote chip and receive L from remote chip Compute KE H K N A K D L F KD H K D L F K N A Note that D L F N A Remote chip does the same for KE and KD User data is encrypted decrypted with keys KE KE KD KD Assumptions No trap doors in E D and H H is not Algorithms for E D and H are Otherwise a software implementation bogus chip could communicate with a real The chip only supports the following operation Return N Load x Return E x x Return E N A F Given E N A F return N A Load K Given E N A F compute KE KD Given M return E M KE Given M return D M KD Anything programmed into the chip can be determined by destroying the chip U U A F N U U A can not be determined except by destroying the Unfortunately this may not be true in I suppose it's possible to determine how a chip has been programmed with a sophisticated sp x ray machine to look for blown The U's are programmed independantly by the escrow Notes For tapping escrow agency Y is given N E Y Y N E Y Y and returns Y Y LEA's must contact all escrow agencies with the serial numbers from both chips and the encrypted partial This allows the agencies to record that both chips were LEA's only get the session key not the key to all conversations of a particular This precludes real time decrypting of a conversation but that isn't one of the STATED Observation In order for any secure by tap able communication scheme to work the active parts need to share a And if this secret is revealed communications by those that know the secret can be made un tap able Obvious candidates are the cryptographic algorithm and the master family Relative size and complexity suggests that the key can be obtained from a silicon implementation of the scheme a LOT easier and faster than the rsbx Raymond Brand