From Greg Rose Subject Authentication and one time pads was Re Advanced one time pad In article Bryan Olson CMSC G writes The one time pad yeilds ideal security but has a well known flaw in Suppose you use a random bit stream as the pad and exclusive or as the encryption If an adversary knows the plaintext of a message he can change it into any other Here's how it Alice is sending Bob a plaintext P under a key stream S Alice computes the ciphertext C S xor P and sends it to Eve knows the plainext P but wants the message to appear as P' Eve intercepts C and computes C' C xor P xor P' S xor P' Eve sends C' to Bob decrypts C' by computing C'xor S P' thus receiving the false message which was substituted by Firstly an aside I agree that the weakness exists but I have a lot of trouble believing that it represents a difficulty in real Given the purpose of the one time pad is to give unbreakable security and the expense of key distribution imply that the clients really do want that level of security These same people want to keep P a secret I find it hard to believe that Eve might happen to have a copy of P lying I am aware that the same argument applies to Eve knowing even a small part of the message but Eve must know EXACTLY where which bytes in C her known susequence starts or the result will be I find this at least as Back to the question If I had the resources to use a one time pad for such transmissions I would also append a Message Authentication Code to the message using up the next bits of the one time pad as the key Your original question basically asked whether there was any way to authenticate the message with the same degree of security as the Pad itself provided and I don't know the However I would propose the following for Alice and Bob have an arbitrary number of secret random bits to share which Eve doesn't She finds them out effectively by knowing some P and the corresponding It is the fact that they CORRESPOND that causes the If a message authentication code was to be created using some one time pad operation such that Eve could not know which parts of the MAC were affected by which parts of the input she would be unable to forge a MAC to What is required is a non linear combiner of parts of the Non linear so that simply xoring or subtracting or whatever doesn't have exactly the same effect Now at the end of the encrypted message C Alice appends a n bit MAC computed as follows means the next full chunk of the one time pad compute P xor and pad to an n bit boundary with more of S break into n bit chunks set MAC to initialisation vector for i in each chunk sequentially set MAC MAC NLOP i At the end of this process MAC is the Message Authentication Bob verifies the MAC in the obvious manner he recovers the plaintext P then uses some more of his pad to reproduce the MAC in the same NLOP is the non linear operator and there is the The simplest non linear operator I can think of is an S box that is have a fixed even published permutation of the n bit integers an indexable table called Sbox and use x NLOP y x xor Sbox y Practically speaking I think this solves your problem as Eve never sees the intermediate output and hence can't deduce or perform any valid substitution on Also practically speaking you want the MAC to be fairly large say bits but you might not want a gigabyte say S box so you might work on byte sized S boxes but I think that is an irrelevant detail for the discussion at Who will be first to point out my errors or give me a pointer to some literature Greg Rose Australian Computing and Communications Institute Use of the standard phrase HIJACKED may be inadvisable' CAA