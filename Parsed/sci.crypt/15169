From John Ioannidis Subject Re Source of random bits on a Unix workstation In article Nicol C So writes In article Bennett Todd Salomon Brothers NY writes This came up because I decided to configure up MIT MAGIC COOKIE security for For this to work you need to stick some bits that an intruder can't guess in a file readable only by you which X client applications They pass the bits back to the server when they want to establish a What I settled on was grabbing a bunch of traffic off the Basically I ran etherfind u x greater compress and skipped over of output then grabbed my As best I can tell these are bits that can be expected to be reasonably uniformly distributed and quite unguessable by an For your application what you can do is to encrypt the real time clock value with a secret For a good discussion of cryptographically good random number generators check out the draft ietf security randomness Internet Draft available at your local friendly internet drafts A reasonably source of randomness is the output of a cryptographic hash function when fed with a large amount of more or less random For example running on dev mem is a slow but random enough source of random bits there are bound to be bits of entropy in the tens or hundreds of megabytes of data in a modern workstation's memory as a fair amount of them are system timers i o buffers ji