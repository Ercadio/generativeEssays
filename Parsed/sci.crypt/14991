From Nikos I Nassuphis Subject LGA ncrypt source I got a number of requests for So here it Its written in Borland TASM will TASM TLINK t The code LGA ncryption C by Nick Nassuphis CODE SEGMENT ASSUME CS CODE DS CODE ORG Start JMP Begin Gas particle assigment BIT particle moving EAST BIT particle moving WEST BIT particle moving NORTH BIT particle moving SOUTH BIT particle moving EAST BIT particle moving WEST BIT particle moving NORTH BIT particle moving SOUTH Collisiong Rules Gas Rules IF E W AND N S THEN E W N S IF N S AND E W THEN N S E W for nibbles and for bytes Reflection Rules just swap bits along directions This look up table implements two particle collisions for the HPP lattice gas HPPRulehis rule implements the velocity reversal needed to run the gas evolution in Its called a WallRule because its the same as is all particles hit a wall head WallRulercPtr DW OFFSET DesPtr DW OFFSET SaveBuff DB MAXBYTE LINENO DUP DB MAXBYTE LINENO DUP DB DUP DB MAXBYTE LINENO DUP DB DUP Data DB DB DB DB This is a test for a Lattice Gas based encryption DB The data is encoded as particles of a DB digital gas whose time evolution is then simulated DB with a cellular automaton type Decryption DB can be achieved by running the simulation in DB A thermodynamic argument ensures that even if a single DB bit is flipped no decryption of the data is possible DB DB After the gas is let to evolve for timesteps DB one can either run the reverse evolution by pressing DB space or flip a bit and then run by pressing ' ' DB DB For a cryptographic application the key would consist DB of the number of time steps and the time and location DB of specific bit DB DB DB DB DB Fill the gas with a piece of code InitGas MOV DI CS SrcPtr MOV SI OFFSET Data MOV CX LINENO PUSH DI PUSH CX MOV CX MAXBYTE MOV AL CS SI MOV CS DI AL INC SI INC DI LOOP POP CX POP DI ADD DI MAXBYTE LOOP MOV SI CS SrcPtr MOV DI OFFSET InitGas MOV CX MAXBYTE MOV AL MOV BYTE PTR CS SI AL NOT AL INC SI LOOP RET Display gas molecules bouncing around ShowGas PUSH ES PUSH SI PUSH DI PUSH CX PUSH BX MOV AX MOV ES AX MOV SI CS SrcPtr MOV DI MOV CX LINENO ADD SI MAXBYTE PUSH CX PUSH DI MOV CX MAXBYTE MOV AL CS SI MOV BYTE PTR ES DI AL INC SI ADD DI DEC CX JNZ POP DI POP CX ADD DI LOOP POP BX POP CX POP DI POP SI POP ES RET CS SI Sourse of Data CS DI Destination of Data ScanOneMiddleLine first byte is a special case because of warparound MOV BL AL is the assembled MOV BH CS SI MAXBYTE NORTH is one line up lower AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE SOUTH is one line down higher AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI MAXBYTE WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI middle bytes can be handled in a loop MOV CX MAXBYTE MOV BL AL is the assembled MOV BH CS SI MAXBYTE NORTH is one line up lower AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE SOUTH is one line down higher AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI LOOP last byte is also special MOV BL AL is the assembled MOV BH CS SI MAXBYTE NORTH is one line up lower AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE SOUTH is one line down higher AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI MAXBYTE EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI RET CS SI Sourse of Data CS DI Destination of Data ScanFirstLine first byte is a special case because of warparound MOV BL MOV BH CS SI MAXBYTE LINENO AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI MAXBYTE WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI middle bytes can be handled in a loop MOV CX MAXBYTE MOV BL AL is the assembled MOV BH CS SI MAXBYTE LINENO AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI LOOP last byte is also special MOV BL AL is the assembled MOV BH CS SI MAXBYTE LINENO AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI MAXBYTE EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL RET CS SI Sourse of Data CS DI Destination of Data ScanLastLine first byte is a special case because of warparound MOV BL AL is the assembled MOV BH CS SI MAXBYTE AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE LINENO AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI MAXBYTE WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI middle bytes can be handled in a loop MOV CX MAXBYTE MOV BL AL is the assembled MOV BH CS SI MAXBYTE AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE LINENO AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI LOOP last byte is also special MOV BL AL is the assembled MOV BH CS SI MAXBYTE AND BH and at bits and OR BL BH OR them into the assembled byte MOV BH CS SI MAXBYTE LINENO AND BH and at bits and OR BL BH place the stuff into AL MOV BH CS SI WEST is one byte left lower AND BH and at bits and OR BL BH MOV BH CS SI MAXBYTE EAST is one byte right higher AND BH and at bits and OR BL BH MOV BH MOV AL BYTE PTR CS BX OFFSET HPPRule MOV CS DI AL INC SI INC DI RET Invert all velocities in the gas InvertAll PUSH BX PUSH CX PUSH SI MOV SI CS SrcPtr MOV BX MOV CX LINENO PUSH CX MOV CX MAXBYTE MOV BL CS SI MOV AL BYTE PTR CS BX OFFSET WallRule MOV CS SI AL INC SI LOOP POP CX LOOP POP SI POP CX POP BX RET IterateOnce MOV SI CS SrcPtr MOV DI CS DesPtr MOV CS SrcPtr DI MOV CS DesPtr SI PUSH SI PUSH DI CALL ScanFirstLine POP DI POP SI ADD SI MAXBYTE ADD DI MAXBYTE MOV CX LINENO dont scan first and last PUSH SI PUSH DI PUSH CX CALL ScanOneMiddleLine POP CX POP DI POP SI ADD SI MAXBYTE ADD DI MAXBYTE LOOP PUSH SI PUSH DI CALL ScanLastLine POP SI POP DI RET Iterate HPP rule CX times Iterate PUSH CX CALL IterateOnce POP CX CALL ShowGas LOOP Iterate RET Iterate HPP rule CX times IterateUntil MOV SI MOV CX OFFSET OFFSET MOV AL BYTE PTR CS SI OFFSET XOR BYTE PTR CS SI OFFSET AL INC SI LOOP CALL IterateOnce CALL ShowGas MOV SI CS SrcPtr MOV CX MAXBYTE MOV BX MOV AH MOV AL MOV BL BYTE PTR CS SI MOV DL BYTE PTR CS BX WallRule NOT AH XOR DL AH AND AL DL INC SI LOOP MOV SI MOV CX OFFSET OFFSET MOV AH BYTE PTR CS SI OFFSET AND AH AL XOR BYTE PTR CS SI OFFSET AH INC SI LOOP JMP MOV AX OFFSET PUSH AX RET DB DUP PUSH AX PUSH BX PUSH CX PUSH DX PUSH DS MOV AH MOV DX CS MsgPtr INT POP DS POP DX POP CX POP BX POP AX RET DB DUP MsgPtr DW OFFSET Msg Msg DB This message is printed out by DB code decrypted using data from the lattice DB which was applied to the decoding routine DB after every time step DB The decoding function left the code unchanged DB except after the gas evolution had completelly DB reversed the thermalization TIMES EQU repetitions are enough to equilibrate the gas Begin MOV AX MOV BH MOV DH MOV DL MOV CX INT MOV AH MOV BH MOV DH MOV DL INT CALL InitGas CALL ShowGas MOV AH INT PUSH CX MOV CX TIMES CALL Iterate CALL InvertAll CALL ShowGas MOV AH INT CMP AL JNE MOV SI CS SrcPtr XOR BYTE PTR CS SI MOV CX TIMES CALL IterateUntil CALL InvertAll CALL ShowGas MOV AX INT CODE ENDS END Start