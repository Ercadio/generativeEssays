From Eyal Lebedinsky Subject Re for joysticks is In writes I'm using to read my joystick and it is hideously Something like of my CPU time is being spent reading the joystick and this is in a program that does nothing but printf and JoyRead If you only do read print then there is no reason for the joystick stuff not to take of the time even if it is The problem is that a lot of programs trap like SMARTDRV and so it is a slow as hell Can I read the joystick port in a reasonably safe fashion via polling And that isn't platform or clockspeed specific The truth is that int joystick reading IS I read it directly from the hardware Note that doing so exposes you to intermittent disturbance from interrupts so you may want to read say twice in a row and keep the lower Don't just turn interrupts off it may prove detrimental to the health of any high speed comms and other Here is an example of how to do this An example of how to read PC joystick port by polling the hardware port Uses inp outp for byte port Will timeout when 'int count ' counts up to This sample reads one port A is presented and B is in the comments You can read both at once by merging the two but it will time out when either joystick is not There is no need to optimize this routine since it runs for as long as the joystick circuitry Written by Eyal Lebedinsky include include include extern int readjoy int x int y int int define JOYPORT define XJOY for joystick B use define YJOY for joystick B use define XYMASK XJOY YJOY define for joystick B use define for joystick B use int returns if ok readjoy int x int y int int register int count register char temp joy temp char XYMASK count outp JOYPORT set trigger do temp joy char inp JOYPORT if temp XJOY x count if temp YJOY y count while count temp joy XYMASK joy joy return count This main is for int main int rc x y printf Hit any key to exit n while kbhit rc readjoy x y printf r d d d rc x y