From ITO Takayuki Subject Re What does the format mean In article Andrew Roberts writes What exactly does the windows bitmap format look like I mean how is the data stored width height of colours bitmap data I couldn't find anything in ths user manual is there any other reference material which would give me this information From thomas Thomas Kinsman Newsgroups Subject DIB BMP CREATION GUIDE as Keywords DIB BMP Bitmaps File Formats Message ID Date Dec GMT Sender Organization Precambiran Electronics Rochester NY Lines Xref GUIDE TO CREATION OF DIB IMAGES Thomas Kinsman Precambrian Electronics Falstaff Rochester NY Copyright March ABSTRACT The format of images created for use by MS Windows applications is documented in the MS Windows Programmer's Reference This guide is intended as a clearify some wording of the specifications and to put forth a recommendation among the various Please send updates corrections suggestions and revisions to Please thank me for writing this on my own time by keeping my name with the Thank you for your This document Copyright by Thomas If desired a PostScript version of this document is This information is You get more than what you pay Don't sue me if I'm OVERVIEW The DIB image file format is intended to be a Device Independent Bitmap file What Microsoft means by Device Independent is unclear to Four pixel resolutions are supported bit bit bit and bit These images were intended for use on DOS IBM or Little Endian If you are creating them on another architecture you will have to byte swap all short and long integer By convention DIB images end in the extension This is because March they are a super set of earlier bitmap image files Consequently you will sometimes hear DIB files referred to as BMP Since DIB images files are a super set there are three flavors of DIB images o DOS DIB These are the recommended convention and the form which I will describe how to They are intended for applications running under MS Windows in a DOS o OS DIB My understanding is that these are the flavor of DIB images that were used by the Presentation o Old style Bitmap March DIFFERENCES BETWEEN FLAVORS The DOS DIB images consist of A BITMAPFILEHEADER file header which identifies the file as a DIB This header also gives the total size of the image file and the offset to the image A BITMAPINFOHEADER image header which specifies the image An optional palette of colors used by the If it exists this may contain or Each entry is a Windows RGBQUAD The image data The OS DIB images consist of The same BITMAPFILEHEADER file header which identifies the file as a DIB This header also gives the total size of the image file and the offset to the image A BITMAPCOREHEADER image header which specifies the image An optional palette of colors used by the Again if this exists it may contain or Each entry is a Windows RGBTRIPLE The image data The Old Style image bitmap consists of Either a BITMAPINFOHEADER or a Which header type is determined by the first long integer DWORD An optional color This palette may be composed of either Windows RGBQUAD structures if the header was a BITMAPINFOHEADER or Windows RGBTRIPLE structures if the header was a BITMAPCOREHEADER The image data CREATING DIB IMAGE Creating a DOS DIB image file consists of several straight forward The headers need to be created and then written to the These header structures are defined in the MS Windows include Palette information needs to be stored for images that are not bit The five general steps are Filling in the BITMAPFILEHEADER and the BITMAPINFOHEADER structures the basic image If the image is a bit bit or an bit image creating the color palette of Calculating the total file size and putting this information in March the bfSize field of the Calculating the offset to the image data from the start of the file and putting this in the bfOffBits field of the Writing to the file the BITMAPFILEHEADER the BITMAPINFOHEADER the color palette and the image data in that order The following sections describe structures in terms of MicroSoft C type defined The following table describes these keywords for those not familiar with MicroSoft Type defined keywords in MicroSoft typedef meaning BYTE unsigned character WORD two byte unsigned integer DWORD four byte unsigned integer March THE BITMAPFILEHEADER This structure is defined in as typedef struct tagBITMAPFILEHEADER WORD bfType DWORD bfSize WORD WORD DWORD bfOffBits BITMAPFILEHEADER The bfType field is the two ascii characters 'B' and 'M' This serves to identify the file as a DIB image On an intel byte ordered machine IBM or a compatible this constant can be formed in C as the quantity 'M' 'B' on an intel The bfSize field is the total size of the For our purposes this field is equal to the size of the BITMAPFILEHEADER plus the size of the BITMAPINFOHEADER plus the number of entries in the color palette times the size of a RGBQUAD plus the number of bytes of image If the image data is being written out in an uncompressed form this value can be calculated ahead of Otherwise this field needs to be filled in Both the and the fields are always set to The bfOffBits field is set to the offset to the start of the image data from the start of the For our purposes this field should be set to the size of the BITMAPFILEHEADER plus the size of the BITMAPINFOHEADER plus the number of entries in the color palette times the size of a This works out because the image data is written write after the color palette if one March THE BITMAPINFOHEADER This structure is defined in as typedef struct tagBITMAPINFOHEADER DWORD biSize DWORD biWidth DWORD biHeight WORD biPlanes WORD biBitCount DWORD biCompression DWORD biSizeImage DWORD biXPelsPerMeter DWORD biYPelsPerMeter DWORD biClrUsed DWORD biClrImportant BITMAPINFOHEADER The biSize field is set to the size of the BITMAPINFOHEADER structure When reading the image file this value is what is used to determine that the image contains a BITMAPINFOHEADER and not a The biWidth field is the width of the image in image The biHeight field is the height of the image in image The biPlanes field should always be set to This data is written out as if there was one color The biBitCount field is the bit depth of the This must be either or depending on the bit depth of the image The biCompression field tells how the image data is compressed if it is DIB images support two forms of run length However I have never seen any images which use it and don't know yet how it Set this field to zero long zero or to indicate that the data is not All subsequent fields of the BITMAPINFOHEADER structure may be set to A requirement of the interpretting software that it be able to compute these fields as necessary from the previous The field which you might want to explicitly specify might be biClrUsed For bit and bit images this field indicates that not all of the possible color entries are used and that the image contains biClrUsed If you are using only colors with an bit image then you may only want to save of the possible palette Generally set this field to March COLOR PALETTES Each entry of a color palette is a RGBQUAD The RGBQUAD structure is defined in the include file as typedef struct tagRGBQUAD BYTE rgbBlue BYTE rgbGreen BYTE rgbRed BYTE rgbReserved RGBQUAD The rgbReserved field is always For each color used the amount of Blue Green and Red are filled into the structure and the structure is written to the A value of zero in the rgbBlue rgbGreen or rgbRed fields indicates that that particular component does not contribute to the color A value of in any of these fields indicates that the component contributes fully to the color IMAGE DATA There are three surprises about the ordering of image data in DIB image The creator of this format was determined to be creative and certainly Within the image data each line written out is padded to the next four byte So if you had an bit image which was only one pixel wide you still have to write out four bytes for every image The number of bytes per line can be calculated as bytes per line width in pix bit depth or in terms of the fields of the BITMAPINFOHEADER structure bytes per line biWidth biBitCount When writing out your image data you must write it out bottom line The bottom line of the image as you would look at it on the screen is the first line of image data in the For bit bit and bit images information is written as you would One bit images are padded eight pixels to a Four bit images are padded two pixels to a Eight bit images are written one pixel per Twenty four bit images are written three bytes per However for bit images the information must be written out in the order blue green While most image file formats write data out in March an RGB ordering a DIB image file writes the data out in an BGR SUMMARY This should provide enough information to create DIB images from applications such as scanners or for image exporting If you find out any more about DIB images please pass the information on to me so that I can modify this document March Thomas Kinsman Rochester NY Practice random kindness and senseless acts of anon ITO Takayuki Senior Department of Infomation Science Faculty of Science University of Tokyo