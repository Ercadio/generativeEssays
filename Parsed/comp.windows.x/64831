From Landon Noll Subject International Obfuscated C Code Contest Opening part of Enclosed are the rules guidelines and related information for the International Obfuscated C Code This is part of a part shar file Enjoy chongo Landon Curt Noll oo Larry Bassel bin sh This is part of a multipart archive echo x extracting Text sed 's X ' 'SHAR EOF' X X X Copyright c Landon Curt Noll Larry Bassel X All Rights Permission for personal education or non profit use X is granted provided this this copyright and notice are included in its X entirety and remains All other uses must receive prior X permission in writing from both Landon Curt Noll and Larry X X X mkentry make an International Obfuscated C Code Contest entry X X usage X mkentry r remarks b build p o X X r remarks file with remarks about the entry X b build file containing how should be built X p the obfuscated program source file X o ioccc entry output file X X compile by X cc o mkentry X X X Placed in the public domain by Landon Curt Noll X X THIS SOFTWARE IS PROVIDED AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED X WARRANTIES INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF X MERCHANTABILITY AND FITNESS FOR A PARTICULAR X X X WARNING X X This program attempts to implement the IOCCC Every attempt X has been made to make sure that this program produces an entry that X conforms to the contest In all cases where this program X differs from the contest rules the contest rules will be Be X sure to check with the contest rules before submitting an X X Send questions or comments but not entries about the contest to X X sun pacbell uunet pyramid hoptoad judges X X The rules and the guidelines may and often do change from year to X You should be sure you have the current rules and guidelines X prior to submitting To obtain all of them send Email X to the address above and use the subject 'send rules' X X Because contest rules change from year to year one should only use this X program for the year that it was Be sure that the RULE YEAR X define below matches this current X X X include X include X include X include sys X include sys X X logic X ifndef TRUE X define TRUE X endif TRUE X ifndef FALSE X define FALSE X endif FALSE X define EOF OK TRUE X define EOF NOT OK FALSE X X global limits X define RULE YEAR NOTE should match the current year X define START DATE UTC first confirmation received X define MAX COL max column a line should hit X define MAX BUILD SIZE max how to build size X define MAX PROGRAM SIZE max program source size X define MAX PROGRAM max program source size not counting X whitespace and not followed by X whitespace or EOF X define MAX TITLE LEN max chars in the title X define MAX ENTRY LEN max length in the entry input line X define MAX ENTRY max number of entries per person per year X define MAX FILE LEN max filename length for a info file X X where to send entries X define ENTRY apple pyramid sun uunet hoptoad obfuscate X define ENTRY X X uuencode process assumes ASCII X define UUENCODE c encode str int c X define UUENCODE LEN max uuencode chunk size X define UUINFO MODE mode of an info file's uuencode file X define UUBUILD MODE mode of the build file's uuencode file X define UUBUILD NAME build name for the build file's uuencode file X define UUPROG MODE mode of the program's uuencode file X define UUPROG NAME name for the program's uuencode file X X encode str char val is the uuencoded character of val Xchar encode str ' ABCDEFGHIJKLMNOPQRSTUVWXYZ ' ABCDEFGHIJKLMNOPQRSTUVWXYZ ' ABCDEFGHIJKLMNOPQRSTUVWXYZ ' ABCDEFGHIJKLMNOPQRSTUVWXYZ X X global declarations Xchar program our name Xlong start time the startup time X X forward declarations Xvoid parse args Xvoid usage XFILE open remark XFILE open build XFILE open program XFILE open output Xvoid output entry Xvoid output remark Xvoid output author Xvoid output info Xvoid output build Xvoid output program Xvoid output end Xint get line Xvoid output till dot Xint col len Xvoid check io Xvoid uuencode X Xmain argc argv X int argc arg count X char argv the args X X FILE remark NULL open remarks stream X FILE build NULL open build file stream X FILE prog NULL open program stream X FILE output NULL open output stream X char rname NULL file with remarks about the entry X char bname NULL file containing how should be built X char pname NULL the obfuscated program source file X char oname NULL ioccc entry output file X struct tm tm startup time structure X X X check on the year X X start time time long X tm gmtime start time X if tm tm year RULE YEAR X fprintf stderr X s WARNING this program applies to d which may differ from d n n X argv RULE YEAR tm tm year X X X X parse the command line args X X parse args argc argv rname bname pname oname X X X open check the input and output files X X We open and truncate the output file first in case it is the same X as one of the input X X output open output oname X remark open remark rname X build open build bname X prog open program pname X if output NULL remark NULL build NULL prog NULL X exit X X X X output each section X X output entry output oname X output remark output oname remark rname X output author output oname X output info output oname X output build output oname build bname X output program output oname prog pname X output end output oname X X X flush the output X X if fflush output EOF X fprintf stderr s flush error in s program oname X perror X exit X X X X final words X X printf nYour entry can be found in You should check this file n X oname X printf correct any problems and verify that the uudecode utility will n X printf correctly decode your build file and n n X printf This program has been provided as a guide for In n X printf cases where it conflicts with the rules the rules shall n X printf It is your responsibility to ensure that your entry conforms to n X printf the current n n X printf Email your entries to n X printf t s n ENTRY X printf t s n n ENTRY X printf Please use the following subject when you Email your entry n X printf tioccc entry n n X all done X exit X X X X parse args parse the command line args X X Given the command line args this function parses them and sets the X required name This function will return only if the command X line syntax is X Xvoid Xparse args argc argv rname bname pname oname X int argc arg count X char argv the args X char rname file with remarks about the entry X char bname file containing how should be built X char pname the obfuscated program source file X char oname ioccc entry output file X X char optarg flag option operand X int flagname the name of the flag X int i X X X Not everyone has getopt so we must parse args by X X program argv X for i i argc i X X determine the flagname X if argv i ' ' X usage X NOTREACHED X X flagname int argv i X X determine the flag's operand X if flagname ' ' argv i ' ' X optarg argv i X else X if i argc X usage X NOTREACHED X else X optarg argv i X X X X save the flag's operand in the correct global variable X switch flagname X case 'r' X rname optarg X break X case 'b' X bname optarg X break X case 'p' X pname optarg X break X case 'o' X oname optarg X break X default X usage X NOTREACHED X X X X X verify that we have all of the required flags X X if rname NULL bname NULL pname NULL oname NULL X usage X NOTREACHED X X return X X X X usage print a usage message and exit X X This function does not X Xvoid Xusage exitval X int exitval exit with this value X X fprintf stderr X usage s r remarks b build p o n n program X fprintf stderr t r remarks tfile with remarks about the entry n X fprintf stderr t b build tfile containing how should be built n X fprintf stderr t p tthe obfuscated program source file n X fprintf stderr t o tioccc entry output file n X exit exitval X X X X open remark open check the remark file X X The remark file should be indented by spaces and should not extend X beyond column MAX These are not requirements so we only X X This function returns NULL on I O or format X XFILE Xopen remark filename X char filename X X FILE stream the opened file stream X char buf BUFSIZ input buffer X int toolong number of lines that are too long X int non indent number of lines not indented by spaces X X X open the remark input file X X stream fopen filename r X if stream NULL X fprintf stderr s cannot open remark file s X program filename X perror X return NULL X X X X look at each line X X while fgets buf BUFSIZ stream NULL X X count lines that do not start with spaces X if buf ' n' strncmp buf X non indent X X X count long lines X if col len buf MAX COL X found a line that is too long X toolong X X X X watch for I O errors X check io stream filename EOF OK X X note long lines if needed X if toolong X fprintf stderr X s WARNING d line s from s extend beyond the column n X program toolong filename X fprintf stderr X s This is ok but it would be nice to avoid n n X program X X X note non indented lines if needed X if non indent X fprintf stderr X s WARNING d line s from s are not indented by spaces n X program non indent filename X fprintf stderr X s This is ok but it would be nice to avoid n n X program X X X return the open file X rewind stream X return stream X X X X open build open check the build file X X The how to build file must not be longer than MAX BUILD SIZE X X This function returns NULL on I O or size X XFILE Xopen build filename X char filename X X FILE stream the opened file stream X struct stat statbuf the status of the open file X X X open the how to build input file X X stream fopen filename r X if stream NULL X fprintf stderr s cannot open how to build file s X program filename X perror X return NULL X X X X determine the size of the file X X if fstat fileno stream statbuf X fprintf stderr s cannot stat how to build file s X program filename X perror X return NULL X X if size MAX BUILD SIZE X fprintf stderr X s FATAL the how to build file s is d bytes long n X program filename size X fprintf stderr X s it may not be longer than d bytes n X program MAX BUILD SIZE X return NULL X X X return the open file X return stream X X X X open program open check the program source file X X The program source file must be The number of X non whitespace and chars not followed by whitespace must X be X X This function returns NULL on I O or size X XFILE Xopen program filename X char filename X X FILE stream the opened file stream X struct stat statbuf the status of the open file X int count special count size X int c the character read X X X open the program source input file X X stream fopen filename r X if stream NULL X fprintf stderr s cannot open program source file s X program filename X perror X exit X X X X determine the size of the file X X if fstat fileno stream statbuf X fprintf stderr s cannot stat program source file s X program filename X perror X return NULL X X if size MAX PROGRAM SIZE X fprintf stderr X s FATAL the program source file s is d bytes long n X program filename size X fprintf stderr X s it may not be longer than d bytes n X program MAX PROGRAM SIZE X return NULL X X X X count the non whitespace non followed by whitespace chars X X count X c X while c fgetc stream EOF X look at non whitespace X if isascii c isspace c X switch c X case ' ' count if not followed by EOF or whitespace X case ' ' X case ' ' X peek at next char X c fgetc stream X if c EOF isascii c isspace c X not followed by whitespace or EOF count it X ungetc c stream X count X X break X default X count X break X X X X X watch for I O errors X check io stream filename EOF OK X X look at the special size X if count MAX PROGRAM X fprintf stderr X s FATAL the number of bytes that are non whitespace and n X program X fprintf stderr X s that are not ' ' ' ' ' ' followed by whitespace n X program X fprintf stderr X s or EOF must be d bytes n X program MAX PROGRAM X fprintf stderr X s in s d bytes were found n X program filename count X return NULL X X X return the open file X rewind stream X return stream X X X X open output open check the entry output file X X This function returns NULL on open X XFILE Xopen output filename X char filename X X FILE stream the opened file stream X X X open the ioccc entry output file X X stream fopen filename w X if stream NULL X fprintf stderr s cannot open ioccc entry file for output s X program filename X perror X exit X X X return the open file X return stream X X X X output entry output the entry section X X Read the needed information form stdin and write the entry X Xvoid Xoutput entry output oname X FILE output entry's output file stream X char oname name of the output file X X char title MAX TITLE LEN the entry's title X char buf MAX COL I O buffer X int entry entry number X int ret fields processed by fscanf X int ok line the line is not ok X char skip input to skip X FILE date pipe pipe to a date command X time t epoch sec seconds since the epoch X char p X X X write the start of the section X X fprintf output entry n X check io output oname EOF NOT OK X X X write the rule year X X fprintf output rule t d n RULE YEAR X check io output oname EOF NOT OK X X determine if this is a fix X printf Is this a fix update or resubmittion to a X printf previous entry enter y or n X while get line buf buf 'y' buf 'n' X printf nplease answer y or n X X if buf 'y' X fprintf output fix ty n X check io output oname EOF NOT OK X printf nBe sure that the title and entry number that you give n X printf are the same of as the entry you are replacing n X else X fprintf output fix tn n X check io output oname EOF NOT OK X X X X write the title X X printf nYour title must match expression be a a zA character n X printf followed by to d more a zA n n X MAX TITLE LEN X printf It is suggested but not required that the title should n X printf incorporate your username in the n X printf case of multiple authors consider using parts of the usernames n X printf of the n n X printf enter your title X do X prompt and read a line X if ok line get line title MAX TITLE LEN MAX COL X printf ntitle is too long please re enter X continue X X X verify the pattern not everyone has regexp so do it by hand X if isascii int title X isalnum int title title ' ' title ' ' X printf ninvalid first character in the title n n X printf enter your title X ok line X else X for p title p ' ' p ' n' p X if isascii int p X isalnum int p X p ' ' p ' ' p ' ' p ' ' X printf ninvalid character in the title n n X printf enter your title X ok line X X X X while ok line X fprintf output title t s title X check io output oname EOF NOT OK X X X write the entry number X X printf nEach person may submit up to d entries per n n X MAX ENTRY X printf enter an entry number from to d inclusive MAX ENTRY X do X get a valid input line X fflush stdout X ret fscanf stdin d n entry X check io stdin stdin EOF NOT OK X skip over input until newline is found X do X skip fgetc stdin X check io stdin stdin EOF NOT OK X if skip ' n' X bad text in input invalidate entry number X entry X X while skip ' n' X X check if we have a number and if it is in range X if ret entry entry MAX ENTRY X printf X nThe entry number must be between and d inclusive n n X MAX ENTRY X printf enter the entry number X X while ret entry entry MAX ENTRY X fprintf output entry t d n entry X check io output oname EOF NOT OK X X X write the submission date X X returns a newline X epoch sec time NULL X fprintf output date t s asctime gmtime epoch sec X check io output oname EOF NOT OK X X X write the OS machine host information X X printf X nEnter the machine s and OS s under which your entry was n X output till dot output oname host X X X X output remark output the remark section X X Read the needed information form stdin and write the entry X Xvoid Xoutput remark output oname remark rname X FILE output entry's output file stream X char oname name of the output file X FILE remark stream to the file containing remark text X char rname name of the remark file X X char buf BUFSIZ input output buffer X X X write the start of the section X X fprintf output remark n X check io output oname EOF NOT OK X X X copy the remark file to the section X X while fgets buf BUFSIZ remark NULL X fputs buf output X check io output oname EOF NOT OK X X check io remark rname EOF OK X X be sure that the remark section ends with a newline X if buf strlen buf ' n' X fputc ' n' output X check io output oname EOF NOT OK X X X X X output author output the author section X X Read the needed information from stdin and write the author X If multiple authors exist multiple author sections will be X Xvoid Xoutput author output oname X FILE output entry's output file stream X char oname name of the output file X X char buf MAX COL I O buffer X int more auths TRUE more authors to note X int auth cnt number of authors processed X X X prompt the user for the author section X X printf nEnter information about each If your entry is after n X printf s and before the contest deadline the judges n START DATE X printf will attempt to Email back a confirmation to the first author n X X X place author information for each author in an individual section X X do X X write the start of the section X fprintf output author n X check io output oname EOF NOT OK X X write the author X printf nAuthor d name auth cnt X while get line buf MAX COL MAX COL X printf nname too long please re enter X X fprintf output name t s buf X check io output oname EOF NOT OK X X write the organization X printf nEnter the School Company Organization of author d n X auth cnt X printf nAuthor d org auth cnt X while get line buf MAX COL MAX COL X printf nline too long please re enter X X fprintf output org t s buf X check io output oname EOF NOT OK X X write the address X printf X nEnter the postal address for author Be sure to include n X auth cnt X printf your country and do not include your n X output till dot output oname addr X X write the Email address X printf X nEnter the Email address for author Use an address from n X auth cnt X printf X a registered domain or well known If you give several n X printf forms list them one per n X output till dot output oname email X X write the anonymous status X printf nShould author d remain anonymous enter y or n X auth cnt X while get line buf buf 'y' buf 'n' X printf nplease answer y or n X X fprintf output anon t s buf X check io output oname EOF NOT OK X X determine if there is another author X printf nIs there another author enter y or n X while get line buf buf 'y' buf 'n' X printf nplease answer y or n X X if buf 'y' X more auths TRUE X else X more auths FALSE X X while more auths TRUE X return X X X X output info output the info section s X X Read the needed information from stdin and write the info X If multiple info files exist multiple info sections will be X Xvoid Xoutput info output oname X FILE output entry's output file stream X char oname name of the output file X X char infoname MAX FILE LEN filename buffer X char yorn y or n answer X char uuname name to uuencode as X FILE infile info file stream X X X prompt the user for info information X X printf nInfo files should be used only to supplement your n X printf For example info files may provide sample input or detailed n X printf information about your Because they are supplemental n X printf the entry should not require them to n n X X X while there is another info file to save uuencode it X X printf Do you have a info file to include enter y or n X while get line yorn yorn 'y' yorn 'n' X printf nplease answer y or n X X while yorn 'y' X X read the filename X printf nEnter the info filename X while get line infoname MAX FILE LEN X printf nInfo filename too long please re enter X X X compute the basename of the info filename X remove the trailing newline X uuname infoname strlen infoname X uuname ' ' X avoid rindex shrrchr compat issues do it by hand X for uuname uuname infoname uuname X if uuname ' ' X uuname X break X X X X attempt to open the info file X infile fopen infoname r X if infile NULL X fprintf stderr n s cannot open info file s X program infoname X perror X continue X X X X write the start of the section X X fprintf output info n X check io output oname EOF NOT OK X X uuencode the info file X uuencode output oname infile infoname UUINFO MODE uuname X X printf nDo you have another info file to include enter y or n X while get line yorn yorn 'y' yorn 'n' X printf nplease answer y or n X X X return X X X X output build output the build section X X Read the needed information from stdin and write the build X Xvoid Xoutput build output oname build bname X FILE output entry's output file stream X char oname name of the output file X FILE build open build file stream X char bname name of the build file X X X write the start of the section X X fprintf output build n X check io output oname EOF NOT OK X X X uuencode the program file X X uuencode output oname build bname UUBUILD MODE UUBUILD NAME X return X X X X output program output the program section X X Read the needed information form stdin and write the program X Xvoid Xoutput program output oname prog pname X FILE output entry's output file stream X char oname name of the output file X FILE prog open program stream X char pname name of program file X X X write the start of the section X X fprintf output program n X check io output oname EOF NOT OK X X X uuencode the program file X X uuencode output oname prog pname UUPROG MODE UUPROG NAME X return X X X X output end output the end section X X Read the needed information form stdin and write the 'end section' X Xvoid Xoutput end output oname X FILE output entry's output file stream X char oname name of the output file X X X write the final section terminator X X fprintf output end n X check io output oname EOF NOT OK X return X X X X get line get an answer from stdin X X This function will flush stdout in case a prompt is pending and X read in the X X This function returns if the line is too long of the length of the X line including the newline of the line was This function does X not return if ERROR or X Xint Xget line buf siz maxcol X char buf input buffer X int siz length of input including the newline X int maxcol max col allowed disable check X X int length the length of the input line X X flush terminal output X fflush stdout X X read the line X if fgets buf siz stdin NULL X report the problem X check io stdin stdin EOF NOT OK X X X look for the newline X length strlen buf X if buf length ' n' X int eatchar the char being eaten X X no newline found line must be too long eat the rest of the line X do X eatchar fgetc stdin X while eatchar EOF eatchar ' n' X check io stdin stdin EOF NOT OK X X report the situation X return X X X watch for long lines if needed X if maxcol length maxcol col len buf maxcol X report the situation X return X X X return length X return length X X X X output till dot output a set of lines until ' ' by itself is read X X This routine will read a set of lines until but not including X a single line with ' ' is The format of the output is X X leader tfirst line X tnext line X tnext line X X X This routine will not return if I O error or X Xvoid Xoutput till dot output oname leader X FILE output entry's output file stream X char oname name of the output file X char leader the lead text for the first line X X char buf BUFSIZ input buffer X int count lines read X int done FALSE TRUE finished reading input X X instruct the user on how to input X printf nTo end input enter a line with a single n X X read lines until ' ' or EOF X count X while done X issue the prompt X printf s t count leader X fflush stdout X X get the line X if get line buf BUFSIZ MAX COL X printf nline too long please re enter n t X continue X X X note if ' ' was read X if strcmp buf n X done TRUE X X X write line if we read something X if done X fprintf output s t s count leader buf X check io output oname EOF NOT OK X X X X if no lines read at least output something X if count X fprintf output s n leader X check io output oname EOF NOT OK X X return X X X X col len determine the highest that a string would reach X X Given a string this routine returns that a string would reach X if the string were printed at column Tab stops are assumed X to start at X Xint Xcol len string X char string the string to examine X X int col current column X char p current char X X scan the string X for col p string p ' ' p ' n' p X note the column shift X col p ' t' col col X X if p ' n' X col X X X return the highest column X return col X X X X check io check for EOF or I O error on a stream X X Does not return if EOF or I O X Xvoid Xcheck io stream name eof ok X FILE stream the stream to check X char name the name of this stream X int eof ok EOF OK or EOF NOT OK X X test for I O error X if ferror stream X fprintf stderr s error on s program name X perror X exit X X test for EOF X else if eof ok EOF NOT OK feof stream X fprintf stderr s EOF on s n program name X exit X X return X X X X uuencode uuencode a file X X Perform the uuencoding process identical to the process performed X by the uuencode X X This routine implements the algorithm described in the uuencode X Reno man X Xvoid Xuuencode output oname infile iname umode uname X FILE output output file stream X char oname output filename X FILE infile input file stream X char iname input filename X int umode the mode to put on the uuencode file X char uname name to put on the uuencode file X X char buf UUENCODE LEN the uuencode buffer X int read len actual number of chars read X int val bit chunk from buf X char filler ' ' filler uuencode pad text X char p X X X output the initial uuencode header X X fprintf output begin o s n umode uname X check io output oname EOF NOT OK X X X clear out the input buffer X X for p buf p buf sizeof buf sizeof buf p X p ' ' X X X X We will process UUENCODE LEN chars at a time forming X a single output line each X X while read len fread buf sizeof buf UUENCODE LEN infile X X X the first character is the length character X X fputc UUENCODE read len output X check io output oname EOF NOT OK X X X We will convert bits at a Thus we will convert X sets of bits into sets of uuencoded X X for p buf read len read len p X X bits to X val p X fputc UUENCODE val output X check io output oname EOF NOT OK X X bits to X val p p X fputc UUENCODE val output X check io output oname EOF NOT OK X X bits to X val p p X fputc UUENCODE val output X check io output oname EOF NOT OK X X bits to X val p X fputc UUENCODE val output X check io output oname EOF NOT OK X X X end of UUENCODE LEN line X fputc ' n' output X check io output oname EOF NOT OK X X X clear out the input buffer don't depend on bzero or memset X X for p buf p buf sizeof buf sizeof buf p X p ' ' X X X X check the last read on the input file X check io infile iname EOF OK X X write end of uuencode file X fprintf output c nend n UUENCODE filler X check io output oname EOF NOT OK X SHAR EOF chmod echo restore of failed set wc c Wc c if test Wc c then echo original size current size Wc c fi echo x extracting Text sed 's X ' 'SHAR EOF' Obfuscated contest information X XCopyright c Landon Curt Noll Larry Bassel XAll Rights Permission for personal education or non profit use is Xgranted provided this this copyright and notice are included in its entirety Xand remains All other uses must receive prior permission in writing Xfrom both Landon Curt Noll and Larry X XThe International Obfuscated C Code Contest IOCCC in the sprit of Xco operation is willing mention other programming contents as space X XHow to have your contest included in this file X X If you wish the IOCCC judges to include your contest in this file X send a request to X X X X We request that contest descriptions be limited to lines and to X not exceed We typically request that your contest X include a current description of the X X In order to be included in this file for given year we must X receive a current description no EARLIER than Jan UTC and X no LATER than Feb Agreement to publish your X contest must also be obtained prior to Feb Annual contests X that fail to submit a new entry will be dropped from this X XOfficial Disclaimer pardon the officialese X X The contents noted below other than the IOCCC are not affiliated X with the IOCCC nor are they endorsed by the We reserve the X right to refuse to print information about a given X X The information below was provided by the particular contest X organizer s and printed by Please contact the X contest organizer s directly regarding their X XWith that official notice given we present for your ENJOYMENT the following Xinformation about contents X X X X International Obfuscated C Contest X X The original obfuscated contest X X Obfuscate cated cating To render X To To confuse Their emotions obfuscated X their obfuscare to darken ob intensive X fuscare to darken fuscus obfuscation X obfuscatory X X GOALS OF THE CONTEST X X To write the most Obscure Obfuscated C program under the rules X To show the importance of programming style in an ironic X To stress C compilers with unusual X To illustrate some of the subtleties of the C X To provide a safe forum for poor C X X The IOCCC is the grandfather of USENET programming Since X this contest demonstrated that a program that mearly works X correctly is not The IOCCC has also done much to add X the arcane word 'obfuscated' back into the English X see The New Hacker's Dictionary by Eric Raymond X X You are strongly encouraged to read the new contest rules before X sending any The rules and sometimes the contest Email X address itself change over A valid entry one year may X be rejected in a later year due to changes in the The typical X start date for contests is in early Contest rules are normally not X finalized and posted until the beginning of the The typical X closing date for contests are in early X X The contest rules are posted to X and If you do not have access X to these groups or if you missed the early March posting you may X request a copy from the judges via Email at X X or sun uunet utzoo pyramid hoptoad judges X X Previous contest winners are available via anonymous ftp from X under the directory pub X X X X International Obfuscated Perl Contest X By Landon Noll Larry Wall X X This content is being Someday when Landon Larry are not too X busy they will actually get around to posting the first set of rules X X Landon says Yes I know that I said we would have a contest in X but other existing projects got in the Hopefully X something will be developed after Nov X X X X International obFUsCaTeD POsTsCripT Contest X Jonathan Monsarrat X Alena Lacova X X A contest of programming skills and knowledge exclusively for the X PostScript programming Its purpose X X To spread knowledge of PostScript and its X To applaud those with the best X To prove that humans can beat those damnable machine generators at X their own game by writing the most obscure and mysterious PostScript X programs X X Winners will receive the fame and attention that goes with having their X program entry posted as a winner to programmers world X X The contest rules and results are available by ftp as X pub postscript obfuscated '' or individually X in the obfuscated The judges will post the rules X in November to on Usenet and other X Send questions to X X Categories include Best Obfuscated PostScript Best Artwork X Most Compact Best Interactive Program Most Useful and X anything so unusual and creative that it deserves an X X The judges will choose the winners of each X X Alena Lacova is a system administrator at NIKHEF Institute for High X Energy and Nuclear Physics in the She is the author of X The PostScript Chaos Programs which draw Julia sets Mandelbrot sets X and other kinds of fractal X X Jonathan Monsarrat is a graduate student from MIT and Brown University X in the He is the FAQ maintainer for the Usenet newsgroup X and the author of The PostScript Zone and X X SHAR EOF chmod echo restore of failed set wc c Wc c if test Wc c then echo original size current size Wc c fi exit Sunnyvale residents Vote Landon Noll for Sunnyvale City Council seat