From Subject Program WM PROTOCOLS in OPEN LOOK toolkit Hi, all I am studying the book UNIX Desktop Guide to OPEN LOOK There is an example winprop c that demonstrate how to program WM PROTOCOLS property in chapter It can run, but only show the static text messages, no Notice pop up What is the problem Thanks in advance for help IOP File winprop c Shows how to set properties on a window include X Xatom h For definition of XA ATOM include X Intrinsic h include X StringDefs h include Xol OpenLook h include Xol StaticText h include Xol OblongButt h include Xol Notice h This file defines the atoms with OL prefix ID of the top level and NoticeShell widget static Widget top level, notice shell static Widget make notice static char message Clients use properties to communicate with the window manager This example illustrates how an OPEN LOOK application requests notification from the window manager when certain events occur The communication is in the form of a ClientMessage event that the application processes in an event handler Atoms used for inter client communication Atom ATOM WM PROTOCOLS, ATOM WM DELETE WINDOW, ATOM WM SAVE YOURSELF static void handle wm messages static void save and exit static void save yourself static void pop notice static void do exit String to hold comand line for use in responding to the WM SAVE YOURSELF protocol message char saved cmdline void main argc, argv int argc char argv Widget w int i Save the command line for use in responding to the WM SAVE YOURSELF protocol message sprintf saved cmdline, s , argv if argc for i i argc i strcat saved cmdline, argv i strcat saved cmdline, Create and initialize the top level widget top level OlInitialize argv , Ol main , NULL, , argc, argv Create a StaticText widget w XtVaCreateManagedWidget Stext , staticTextWidgetClass, top level, XtNstring, message, XtNwidth, , NULL Create a NoticeShell widget for later use make notice top level Intern the atoms ATOM WM PROTOCOLS XInternAtom XtDisplay w , WM PROTOCOLS , False ATOM WM DELETE WINDOW XInternAtom XtDisplay w , WM DELETE WINDOW , False ATOM WM SAVE YOURSELF XInternAtom XtDisplay w , WM SAVE YOURSELF , False Add an event handler to process ClientMessage events sent by the window manager XtAddEventHandler top level, NoEventMask, True, handle wm messages, NULL Realize the widgets and start processing events XtRealizeWidget top level Append the properties WM DELETE WINDOW and WM SAVE YOURSELF to the definition of the WM PROTOCOLS property This step requires the window ID of the top level widget The window ID is valid only after the widget is realized XChangeProperty XtDisplay top level , XtWindow top level , ATOM WM PROTOCOLS, XA ATOM, , PropModeAppend, ATOM WM DELETE WINDOW, XChangeProperty XtDisplay top level , XtWindow top level , ATOM WM PROTOCOLS, XA ATOM, , PropModeAppend, ATOM WM SAVE YOURSELF, XtMainLoop static void handle wm messages w, client data, p event Widget w XtPointer client data XEvent p event if p event type ClientMessage p event xclient message type ATOM WM PROTOCOLS if p event xclient data l ATOM WM DELETE WINDOW save and exit if p event xclient data l ATOM WM SAVE YOURSELF save yourself static void save and exit Display a notice giving the user a chance to respond pop notice top level, notice shell static void save yourself Set the WM COMMAND property to the saved command line XChangeProperty XtDisplay top level , XtWindow top level , XA WM COMMAND, XA STRING, , PropModeReplace, saved cmdline, strlen saved cmdline static Widget make notice parent Widget parent Widget w, n text, n control, n exit, n cancel Create a button and provide a callback to pop up a Notice w XtVaCreateManagedWidget QuitButton , oblongButtonWidgetClass, parent, XtNlabel, Exit , NULL XtAddCallback w, XtNselect, pop notice, NULL Create the NoticeShell widget Note that you have to use XtVaCreatePopupShell instead of the usual XtVaCreateManagedWidget notice shell XtVaCreatePopupShell QuitNotice , noticeShellWidgetClass, w, NULL Get the ID of the text and control area widgets of the NoticeShell XtVaGetValues notice shell, XtNtextArea, n text, XtNcontrolArea, n control, NULL Place a message in the text area of the NoticeShell XtVaSetValues n text, XtNstring, Please confirm exit from program , NULL Add buttons to the control area of the NoticeShell Each button has an appropriate callback n exit XtVaCreateManagedWidget NoticeExit , oblongButtonWidgetClass, n control, XtNlabel, Exit , NULL XtAddCallback n exit, XtNselect, do exit, NULL n cancel XtVaCreateManagedWidget NoticeCancel , oblongButtonWidgetClass, n control, XtNlabel, Cancel , XtNdefault, True, NULL return w static void pop notice w emanate, w notice Widget w emanate, w notice XtVaSetValues w notice, XtNemanateWidget, w emanate, NULL Pop up the NoticeShell widget The NoticeShell widget makes sure that the aplication waits until the user selects from one of the buttons in the NoticeShell's control area XtPopup w notice, XtGrabExclusive static void do exit w, call data, client data Widget w XtPointer call data, client data XCloseDisplay XtDisplay w exit