From rgooch Richard Gooch Subject Re Animation with XPutImage In article Derek Richardson writes I just implemented this and it seems I can just about achieve the display rates frames sec on IPX that I get with Sunview though it's a bit choppy at Also loading the data making an XImage then XPut'ing it into a pixmap is a bit cumbersome so the animation is slower to load than with Is there a better way to load in the data rgooch Richard Gooch writes If you need speed and your client can run on the same host as the X server you should use the shared memory extension to the sample X server MIT SHM xdpyinfo will tell you if your server has this This is certainly available with the sample MIT X server running under A word of warning make sure your kernel is configured to support shared And another word of warning OpenWindows is slower than the MIT I have written an imaging tool using XView for the GUI by the way which yields over frames per second for bit images running on a Sparc IPC half the cpu grunt of an IPX This has proved quite sufficient for Regards Richard Shared memory PutImage also mentioned by Nick Kisseberth looks interesting but I need someone to point me to some Is this method likely to give better results than server resident pixmaps I'd also be interested in looking at the XView code mentioned Thanks for the help so If I get something decent put together I'll definitely post it to the The MIT tapes come with documentation written by Keith Packard on the Shared Memory Extension to Look in mit doc extensions mit I found this Unfortunately there is a bit of work to set up the shared memory segments making an XImage from it Also there is an extension query to determine if the server supports it but you still need to test if the server is running on the same host and if shared memory is enabled in the I have written layers of convience routines which make all this As for the XView code well I doubt that would be considered The interesting stuff is done in a C object People interested in this code can Email Regards Richard Gooch