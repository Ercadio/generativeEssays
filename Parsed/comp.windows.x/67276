From Inoue Takeshi Subject How to see characterset from wchar t We developed a toolkit running on the X Window System The toolkit copes with any languages based on X R 's i n facility As you know, there are kinds of i n implementation from MIT's X R release Xsi and Ximp Our original implementation of the toolkit uses Xsi Our toolkit manages each character's size based on our own font management system In order to do that, the 'wchar t' typed character strings must be decomposed to character sets This means that if one wchar t type compound string with ASCII and Kanji mixed, for example, is given, each element of the wchar t array must be checked its corresponding character set based on a bit layout and application environment's locale In this case if the locale is 'japanese', each wchar t character will be classified either to iso , jisx or so We need a function to do this The function must check how many characters from the top are the same character set and what the character set is We could not find any public X R function to do that and inevitably, used Xsi's internal functions to construct that function The following is the source code of that function 'decomposeCharacterSet ' I N h This may look like C code, but it is really C Id I N h,v iima Exp iima ifndef I N H define I N H include X Xlib h extern int decomposeCharacterSet const wchar t wc str, IN int wc len, IN char buf, OUT int buflen, IN OUT int scanned len, OUT char charset OUT extern XmString wcharToXmString const wchar t wc str extern XmStringCharSet charsetOfWchar const wchar t wc endif I N H I N cc Id I N cc,v iima Exp include stdlib h include X Xlibint h include Xm Xm h include I N h extern C include X wchar h define XwcDecomposeGlyphCharset XXX XwcDecomposeGlyphCharset define Xmbfscs XXX Xmbfscs define Xmbctidtocsid XXX Xmbctidtocsid include Xlocaleint h undef XwcDecomposeGlyphCharset undef Xmbfscs undef Xmbctidtocsid extern int XwcDecomposeGlyphCharset XLocale, const wchar t , int, char , int , int , int extern Charset Xmbfscs XLocale, CSID extern CSID Xmbctidtocsid XLocale, CSID int decomposeCharacterSet const wchar t wc str, IN int wc len, IN char buf, OUT int buf len, IN OUT int scanned len, OUT char charset OUT XLocale xlocale XFallBackConvert int ctid int status Charset xcharset status XwcDecomposeGlyphCharset xlocale, wc str, wc len, buf, buf len, scanned len, ctid if status Success xcharset Xmbfscs xlocale, Xmbctidtocsid xlocale, ctid charset xcharset xcharset cs name NULL else charset NULL return status An included file above, Xlocaleint h , is also Xsi internal and we copied the file to the toolkit directory and compiled A serious issue occured when we tried to compile a toolkit application on our HP machine with its OS version of HP UX When we tried to link an application based on our toolkit, link errors occured saying that the following functions are missing Xmbctidtocsid code Xmbfscs code XwcDecomposeGlyphCharset code XFallBackConvert code We had used MIT release version of X R and its Xsi implementation until HP UP and ran applications successfully One of the reasons to use Xsi was that because HP did not release HP's X R until the OS and we had no way to know how HP's R would be implemented We had hoped Xsi's popularity and used its internal functions The HP's linker complains that there are no Xsi internal functions implemented We observe from HP's libX a, they used some Ximp implementation but we are not sure if they used MIT's vanilla Ximp version or their own version of Ximp and therefore, finding just counter part functions in MIT's Ximp for Xsi does not seem to lead us a solution My question and goal is to know how we can construct a function like 'decomposeCharacterset ' listed above Is there any function to check character set of each element of wchar t type strings depending on locales If it is a public function, that is perfect but even if it is not, we want to use any internal functions in HP's X R as we did for MIT's R In order to render a 'wchar t' type string, there must be some machinery to judge character sets and that is how the proper fonts are selected for the string We have no way to find out that without any HP's X R source files We want to know how we can use that for our goal Any help or comments would be highly appreciated I also appreciate if anyone tell me about Ximp treating around this area even if it is not HP's implementation Thank you Takeshi Inoue Yokogawa Electric Corporation Open Systems Laboratory