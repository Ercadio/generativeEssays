From Bernie Roehl Subject Re Optimizing projections In article LIONESS writes My three d library does a lot of projections duh but currently it is projecting an object's vertices on a per triangle basis This is grossly inefficient for of the objects displayed which can be optimized by doing projections ONE time once for each vertex but objects whose Z extents intersect the hither plane can't benefit from this because new vertices must be created during Z Anyone have any better ideas Here's what you should Keep the vertices in an array and have the polygons triangles are okay but n sided polygons are slightly more efficient store the indices into the array of the vertices that comprise You set a flag for each vertex when you transform it so you don't have to transform any vertex more than once you also do backface elimination before processing the polygon so that vertices that belong only to bacfacing polys don't have to be transformed at Whenever you transform a vertex check if it's on the far side of the hither plane if it is you can project it right away and store the Then do your Z clip any vertices that get produced will have to have their projection done at that Bernie Roehl University of Waterloo Dept of Electrical and Computer Engineering Mail broehl Voice x work