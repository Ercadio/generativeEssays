From Alan Christiansen Subject Re Fast polygon routine needed Lucas Adamski writes In article Ian D Romanick writes What kind of polygons Shaded Texturemapped Hm More comes into play with fast routines than just polygons It would be nice to know exaclty what system VGA is a start but what processor and a few of the specifics of the You need to give more info if you want to get any answers P I don't want texture mapped cause if I did I'd asked for Just a simple and fast routine to do filled As for the processor it'd be for a minimum of a maybe if I can't find a good one for Ideally I want a polyn function that can clip to a user defined viewport and write to an arbitrary location in Of course the chances of Ok It is for a game that is and you have listed the characteristics that you are looking I think you may have left out a few important The polygons are all They have less than N you are drawing meshes walls doors I believe that the algorithms you can get that will only draw convex polygons can be much more efficient than those that can draw concave self intersecting This efficiency can largely be attributed to the fact that simple convex polygons only have a left and a right edge on each scan Complex figure type polygons can be a bit The less than N sides specification especially if it is a very small number like or allow othe optimisations to be Thus for a high speed game application I think you are looking for code that exploits and is hence limited to drawing simple convex finding something like that are pretty remote so I guess I'd need the source with Oh and I guess it would need to be in ASM otherwise it'd be too I've seen some polygon routines in C and they've all been waaay too Its for a vector graphics I've been hunting high and low It may have been that they were very general purpose If you limit yourself to or four sided simple convex polygons I think you might be suprised how fast a c algorithm with a asm block move to fill each scan line might actually for a polyn function in ASM and I can't find one anywhere that I can I've found one or two polyn functions but my ASM is pretty bad so I won't even try to rewrite